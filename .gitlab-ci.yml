# https://docs.gitlab.com/ce/ci/yaml/
# https://gitsc.emundo.eu/ci/lint
# https://gitsc.emundo.eu/help/ci/README.md

image: emundo/docker-compose-openjdk-node-gradle:openjdk-8-gradle-5.4

variables:
  # https://docs.gradle.org/current/userguide/gradle_daemon.html#sec:why_the_daemon
  JAVA_OPTS: "-Xmx4096m -Dorg.gradle.daemon=false"

stages:
  - build
  - test

cache:
  paths:
    - .gradle

before_script:
  # Gradle-Ressourcen im job-übergreifenden Cache
  - export GRADLE_USER_HOME=${PWD}/.gradle
  # Bestimme bei Vorhandensein eines Tags oder verwende 'latest'
  - "[[ -z $CI_COMMIT_TAG ]] && CI_COMMIT_TAG=latest"
  - "export CI_COMMIT_TAG"

docker_build:
  stage: build
  except:
    - master
    - tags
  script:
    # Baue Docker Image
    - docker build -t "$CI_PROJECT_NAME" -f Dockerfile .

docker_build_push:
  stage: build
  only:
    - master
    - tags
  script:
    # Baue Docker Image
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" -f Dockerfile .

    # Veröffentliche Docker Image in der Registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"

docker_run:
  stage: test
  except:
    - master
    - tags
  script:
    - docker run --rm "$CI_PROJECT_NAME" atlas-version

docker_image_run:
  stage: test
  only:
    - master
    - tags
  image:
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    # SDK direkt aufrufen wegen /plugin
    entrypoint: [""]
  script:
    # Teste Docker Image
    - atlas-version
